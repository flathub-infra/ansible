- name: install nginx
  package:
    name: nginx
    state: latest

- name: create cache directory
  file:
    path: "{{ frontend_nginx_cache_dir }}"
    state: directory
    owner: nginx
    group: nginx
    setype: _default

- name: install RFC7919 ffdhe2048 DH groups
  copy:
    src: ffdhe2048.pem
    dest: /etc/nginx/ffdhe2048.pem
  notify:
   - reload nginx

- name: install nginx.conf
  copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
  notify:
   - reload nginx

- name: install nginx mime.types
  copy:
    src: nginx-mime.types
    dest: /etc/nginx/mime.types
  notify:
   - reload nginx

- name: install nginx conf.d/cache.conf
  template:
    src: nginx-conf.d-cache.conf.j2
    dest: /etc/nginx/conf.d/cache.conf
  notify:
   - reload nginx

- name: install nginx conf.d/default.conf
  template:
    src: nginx-conf.d-default.conf.j2
    dest: /etc/nginx/conf.d/default.conf
  notify:
   - reload nginx

- name: install nginx conf.d/dl-default.conf
  template:
    src: nginx-conf.d-dl-default.conf.j2
    dest: /etc/nginx/conf.d/dl-default.conf
  notify:
   - reload nginx

- name: install nginx conf.d/gzip.conf
  copy:
    src: nginx-conf.d-gzip.conf
    dest: /etc/nginx/conf.d/gzip.conf
  notify:
   - reload nginx

- name: install nginx conf.d/upstream-api.conf
  template:
    src: nginx-conf.d-upstream-api.conf.j2
    dest: /etc/nginx/conf.d/upstream-api.conf
  notify:
   - reload nginx

- name: install nginx conf.d/upstream-prerender.conf
  template:
    src: nginx-conf.d-upstream-prerender.conf.j2
    dest: /etc/nginx/conf.d/upstream-prerender.conf
  notify:
   - reload nginx

- name: install nginx conf.d/webroot-default.conf
  template:
    src: nginx-conf.d-webroot-default.conf.j2
    dest: /etc/nginx/conf.d/webroot-default.conf
  notify:
   - reload nginx

- name: install nginx default.d/api.conf
  template:
    src: nginx-default.d-api.conf.j2
    dest: /etc/nginx/default.d/api.conf
  notify:
   - reload nginx

- name: install nginx default.d/buildbot.conf
  template:
    src: nginx-default.d-buildbot.conf.j2
    dest: /etc/nginx/default.d/buildbot.conf
  notify:
   - reload nginx

- name: install nginx default.d/dehydrated.conf
  copy:
    src: nginx-default.d-dehydrated.conf
    dest: /etc/nginx/default.d/dehydrated.conf
  notify:
   - reload nginx

- name: install nginx default.d/repo.conf
  template:
    src: nginx-default.d-repo.conf.j2
    dest: /etc/nginx/default.d/repo.conf
  notify:
   - reload nginx

- name: install nginx default.d/webroot.conf
  template:
    src: nginx-default.d-webroot.conf.j2
    dest: /etc/nginx/default.d/webroot.conf
  notify:
   - reload nginx

- name: permit http/https services in firewall
  firewalld:
    service: "{{ item }}"
    state: enabled
    permanent: true
    immediate: true
  with_items:
   - http
   - https

- name: allow httpd to make network connections
  seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes

- name: ensure nginx is running with latest config
  meta: flush_handlers
