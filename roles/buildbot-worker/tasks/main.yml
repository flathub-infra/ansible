---
- name: add flatpak ppa
  apt_repository:
    repo: ppa:flatpak/stable

- name: install flatpak
  apt: name=flatpak,flatpak-builder,ostree update_cache=yes cache_valid_time=3600

- name: install buildbot packages
  package:
    name:
      - build-essential
      - bzr
      - elfutils
      - gcc # Needed for installing twisted
      - git
      - python3-dev
      - python3-pip
      - virtualenv
      - python-setuptools
      - python3-psutil
    state: latest

- name: create buildbot user
  user:
    name: "{{ buildbot_worker_user }}"
    home: "{{ buildbot_worker_home }}"
    uid: 996
    system: yes
  register: create_buildbot_user

- name: enable linger for buildbot user
  command: "loginctl enable-linger {{ buildbot_worker_user }}"
  when: create_buildbot_user.changed

- name: ensure buildbot worker home directory is owned by buildbot
  file:
    path: "{{ buildbot_worker_home }}"
    state: directory
    owner: "{{ buildbot_worker_user }}"
    group: "{{ buildbot_worker_user }}"
    mode: '0700'

- name: install pip and buildbot-worker in virtualenv
  pip:
    name:
      - buildbot-worker
      - pip
    state: latest
    virtualenv: "{{ buildbot_worker_sandbox }}"
    virtualenv_python: python3
  with_items:
   - pip
   - buildbot-worker
  become: true
  become_user: "{{ buildbot_worker_user }}"

- name: create directories for worker configuration
  file:
    path: "{{ item }}"
    state: directory
  become: true
  become_user: "{{ buildbot_worker_user }}"
  with_items:
    - "{{ buildbot_worker_dir }}"
    - "{{ buildbot_worker_dir }}/info"

- name: configure worker
  template:
    src: buildbot.tac.j2
    dest: "{{ buildbot_worker_dir }}/buildbot.tac"
  notify:
   - restart buildbot-worker

- name: set admin info
  copy:
    content: '{{ buildbot_worker_admin }}'
    dest: "{{ buildbot_worker_dir }}/info/admin"

- name: set host info
  copy:
    content: '{{ buildbot_worker_description }}'
    dest: "{{ buildbot_worker_dir }}/info/host"

- name: add systemd unit
  template:
    src: buildbot-worker.service.j2
    dest: /etc/systemd/system/buildbot-worker.service
  notify:
   - restart buildbot-worker

- name: enable and start worker
  systemd:
    name: buildbot-worker
    daemon_reload: yes
    enabled: yes
    state: started
  notify:
   - restart buildbot-worker

- name: configure git
  template:
    src: gitconfig.j2
    dest: "{{ buildbot_worker_home }}/.gitconfig"

- name: install dead job reaper
  template:
    src: reap-dead-builds.py
    dest: /usr/local/bin/reap-dead-builds.py

- name: install dead job reaper
  copy:
    src: reap-dead-builds.py
    dest: /usr/local/bin/reap-dead-builds.py
    owner: root
    group: root
    mode: 0755
  tags: reap-dead-builds

- name: install systemd timer and service for dead job reaper
  copy:
    src: "{{ item }}"
    dest: "/etc/systemd/system/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - reap-dead-builds.service
    - reap-dead-builds.timer
  tags: reap-dead-builds

- name: enable and start systemd timer for dead job reaper
  systemd:
    name: reap-dead-builds.timer
    daemon_reload: yes
    enabled: yes
    state: started
  tags: reap-dead-builds
