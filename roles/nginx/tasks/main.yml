---
- name: install nginx
  package:
    name: nginx
    state: latest

- name: create default.d directory
  file:
    path: /etc/nginx/default.d
    state: directory

- name: install helper for validating config files
  copy:
    src: ansible-validate-nginx-config
    dest: /usr/local/sbin/ansible-validate-nginx-config
    mode: 0750

- name: install nginx.conf
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    validate: /usr/sbin/nginx -t -c %s
  notify:
   - reload nginx

- name: install mime.types
  copy:
    src: mime.types
    dest: /etc/nginx/mime.types
  notify:
   - reload nginx

- name: install RFC7919 ffdhe2048 DH groups
  copy:
    src: ffdhe2048.pem
    dest: '{{ nginx_dhparam_file }}'
  notify:
   - reload nginx

- name: install conf.d/gzip.conf
  copy:
    src: conf.d/gzip.conf
    dest: /etc/nginx/conf.d/gzip.conf
    validate: /usr/local/sbin/ansible-validate-nginx-config %s conf.d/gzip.conf
  notify:
   - reload nginx

- name: install default.d/ssl.conf
  template:
    src: default.d/ssl.conf.j2
    dest: /etc/nginx/default.d/ssl.conf
    validate: /usr/local/sbin/ansible-validate-nginx-config %s default.d/ssl.conf
  notify:
   - reload nginx

- name: install default.d/dehydrated.conf
  template:
    src: default.d/dehydrated.conf.j2
    dest: /etc/nginx/default.d/dehydrated.conf
    validate: /usr/local/sbin/ansible-validate-nginx-config %s default.d/dehydrated.conf
  notify:
   - reload nginx

- name: install conf.d/dehydrated.conf
  copy:
    src: conf.d/dehydrated.conf
    dest: /etc/nginx/conf.d/dehydrated.conf
  notify:
   - reload nginx

- name: permit http/https services in firewall (default zone)
  firewalld:
    service: "{{ item }}"
    state: enabled
    permanent: true
    immediate: true
  with_items:
  - http
  - https
  when: base_firewall == 'firewalld'

- name: permit http/https services in firewall (dmz zone)
  firewalld:
    service: "{{ item }}"
    state: enabled
    permanent: true
    immediate: true
    zone: dmz
  with_items:
  - http
  - https
  when: base_firewall == 'firewalld'
